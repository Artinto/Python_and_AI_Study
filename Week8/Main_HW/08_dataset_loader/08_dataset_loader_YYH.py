# -*- coding: utf-8 -*-
"""Untitled6.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1f5BZm-iVAkqUpQOcnfxccb0h6IpKMWt5
"""

# References
# https://github.com/yunjey/pytorch-tutorial/blob/master/tutorials/01-basics/pytorch_basics/main.py
# http://pytorch.org/tutorials/beginner/data_loading_tutorial.html#dataset-class
from torch.utils.data import Dataset, DataLoader
from torch import from_numpy, tensor
import numpy as np

class DiabetesDataset(Dataset):
    """ Diabetes dataset."""

    # Initialize your data, download, etc.
    def __init__(self):
        xy = np.loadtxt('/content/drive/MyDrive/diabetes.csv', delimiter=',', dtype=np.float32) #데이터로드
        self.len = xy.shape[0]                  
        self.x_data = from_numpy(xy[:, 0:-1])   #마지막열을 뺀 데이터를 x_data
        self.y_data = from_numpy(xy[:, [-1]])   #마지막열의 데이터를 y_data

    def __getitem__(self, index):
        return self.x_data[index], self.y_data[index] #index 번쨰 데이터 반환

    def __len__(self):                                #데이터의 길이반환 
        return self.len


dataset = DiabetesDataset()
train_loader = DataLoader(dataset=dataset, batch_size=32,shuffle=True,  num_workers=2)  #  배치 사이즈 32, 셔플 사용 멀티쓰레딩 사용

for epoch in range(2):
    for i, data in enumerate(train_loader, 0):                    #인덱스번호와 train_loader 값을 반환한다.
        # get the inputs
        inputs, labels = data                                     #data를 inputs와 labels로 나눔

        # wrap them in Variable
        inputs, labels = tensor(inputs), tensor(labels)           # inputs 와 labels 를 텐서로

        # Run your training process
        print(f'Epoch: {i} | Inputs {inputs.data} | Labels {labels.data}') # 출력